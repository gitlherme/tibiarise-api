// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

// datasource db {
//   provider = "sqlite"
//   url      = "file:./dev.db?connection_limit=1&socket_timeout=10"
// }

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Character {
  id              String            @id @default(uuid())
  name            String            @unique
  world           String
  level           Int
  experience      BigInt
  streak          Int               @default(1)
  createdAt       DateTime          @default(now())
  updatedAt       DateTime          @updatedAt
  verified        Boolean?          @default(false)
  verifiedAt      DateTime?
  user            User?             @relation(fields: [userId], references: [id])
  userId          String?
  dailyExperience DailyExperience[]
  profitHistory   ProfitEntry[]
}

model User {
  id         String      @id @default(uuid())
  email      String      @unique
  characters Character[]
}

model ProfitEntry {
  id             String    @id @default(uuid())
  characterId    String
  character      Character @relation(fields: [characterId], references: [id])
  huntName       String    @default("")
  huntDate       DateTime  @default(now())
  huntDuration   Int?
  profit         BigInt
  preyCardsUsed  Int
  boostsValue    Int
  tibiaCoinValue BigInt
  netProfit      BigInt    @default(0)
  createdAt      DateTime  @default(now())
  updatedAt      DateTime  @updatedAt
}

model VerifyCharacter {
  id               String   @id @default(uuid())
  characterName    String
  verificationCode String
  userId           String
  expiresAt        DateTime
  createdAt        DateTime @default(now())
}

model DailyExperience {
  id          String    @id @default(uuid())
  value       BigInt
  level       Int
  date        String
  character   Character @relation(fields: [characterId], references: [id])
  characterId String
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
}
